// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Prestamos.DAL;

namespace Proyecto_Prestamos.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210129231008_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Proyecto_Prestamos.Entidades.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Accesibilidad")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Ganancia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<int>("Retrazos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Proyecto_Prestamos.Entidades.PrestamosMeses", b =>
                {
                    b.Property<int>("PrestamoMesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Accesibilidad")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CapitalRestante")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DeudaRedito")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Ganancia")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Interes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Prestamo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ReditoPagar")
                        .HasColumnType("TEXT");

                    b.Property<int>("Retrazo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tiempo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioIdCreacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrestamoMesId");

                    b.ToTable("PrestamosMeses");
                });

            modelBuilder.Entity("Proyecto_Prestamos.Entidades.PrestamosMesesDetalle", b =>
                {
                    b.Property<int>("PrestamoMesDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Abono")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BalanceRestante")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescripcionPago")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Mora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroCuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrestamoMesId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Redito")
                        .HasColumnType("TEXT");

                    b.HasKey("PrestamoMesDetalleId");

                    b.HasIndex("PrestamoMesId");

                    b.ToTable("PrestamosMesesDetalle");
                });

            modelBuilder.Entity("Proyecto_Prestamos.Entidades.PrestamosSemanas", b =>
                {
                    b.Property<int>("PrestamoSemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Accesibilidad")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Capital")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CuotasRestantes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Ganancia")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Interes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PagoSemanal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Prestamo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Redito")
                        .HasColumnType("TEXT");

                    b.Property<int>("Retrazo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tiempo")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalRestante")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioIdCreacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrestamoSemId");

                    b.ToTable("PrestamosSemanas");
                });

            modelBuilder.Entity("Proyecto_Prestamos.Entidades.PrestamosSemanasDetalle", b =>
                {
                    b.Property<int>("PrestamoSemDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BalanceRestante")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescripcionPago")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Mora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroCuota")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Pago")
                        .HasColumnType("TEXT");

                    b.Property<int>("PrestamoSemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrestamoSemDetalleId");

                    b.HasIndex("PrestamoSemId");

                    b.ToTable("PrestamosSemanasDetalle");
                });

            modelBuilder.Entity("Proyecto_Prestamos.Entidades.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Accesibilidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoRecuperacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioIdCreacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Accesibilidad = true,
                            Clave = "YQBkAG0AaQBuAA==",
                            CodigoRecuperacion = "12345678",
                            Email = "Admin@outlook.com",
                            Fecha = new DateTime(2021, 1, 29, 19, 10, 7, 911, DateTimeKind.Local).AddTicks(6032),
                            FechaCreacion = new DateTime(2021, 1, 29, 19, 10, 7, 912, DateTimeKind.Local).AddTicks(712),
                            FechaModificacion = new DateTime(2021, 1, 29, 19, 10, 7, 912, DateTimeKind.Local).AddTicks(742),
                            NombreUsuario = "admin",
                            Nombres = "Administrador",
                            UsuarioIdCreacion = 1
                        });
                });

            modelBuilder.Entity("Proyecto_Prestamos.Entidades.PrestamosMesesDetalle", b =>
                {
                    b.HasOne("Proyecto_Prestamos.Entidades.PrestamosMeses", null)
                        .WithMany("PrestamoMesDetalle")
                        .HasForeignKey("PrestamoMesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proyecto_Prestamos.Entidades.PrestamosSemanasDetalle", b =>
                {
                    b.HasOne("Proyecto_Prestamos.Entidades.PrestamosSemanas", null)
                        .WithMany("PrestamoSemDetalle")
                        .HasForeignKey("PrestamoSemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proyecto_Prestamos.Entidades.PrestamosMeses", b =>
                {
                    b.Navigation("PrestamoMesDetalle");
                });

            modelBuilder.Entity("Proyecto_Prestamos.Entidades.PrestamosSemanas", b =>
                {
                    b.Navigation("PrestamoSemDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
